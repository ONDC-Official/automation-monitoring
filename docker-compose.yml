networks:
  monitoring:
    driver: bridge
volumes:
  prometheus_data: {}
services:
  loki:
    image: grafana/loki:2.9.0
    restart: unless-stopped
    container_name: loki-logs
    ports:
      - "3002:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./wal:/loki/wal
      - ./loki/index:/loki/index
      - ./loki/chunks:/loki/chunks
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  promtail:
    image: grafana/promtail:2.7.0
    restart: unless-stopped
    container_name: promtail-logs
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - monitoring
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-metrics
    user: "1000"
    environment:
      - PUID=1000
      - PGID=1000
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter-metrics
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    user: "1000"
    container_name: grafana-ui
    ports:
      - 3001:3001
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=Admin@5261
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    networks:
      - monitoring
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager:/alertmanager
    networks:
      - monitoring
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'

  jaeger:
    image: jaegertracing/all-in-one:1.53
    command: ["--query.base-path=/tracing"]
    container_name: jaeger-tracing
    restart: unless-stopped
    ports:
      - "3003:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector endpoint (HTTP)
      - "4318:4318"
    networks:
      - monitoring

